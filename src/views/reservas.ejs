<!-- src/views/reservas.ejs -->

<!-- Incluye Bootstrap CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.7/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.7/dist/sweetalert2.min.js"></script>

<%- include('./layouts/nav') %>
<div class="container">

  <!-- Botón para agregar una nueva reserva -->

  <!-- Lista de reservas existentes -->
  <h2>Listado de Reservas</h2>

  <!-- Buscar -->
  <label for="buscarEstado">Buscar por Estado:</label>&nbsp;
  <input type="text" id="buscarEstado" oninput="filtrarReservasPorEstado()" placeholder="Ingrese el estado..." class="form-control">

  <form action="/generarPDFReservas" method="GET">
    <button type="submit" class="btn btn-secondary">Generar Informe en PDF</button>
  </form>
  <button id="btnAgregarReserva" class="btn btn-primary">Agregar Reserva</button>

  <br>
  <br>
  <!-- Tabla de reservas -->
  <table id="tablaReservas" class="table table-dark table-sm">
    <thead>
      <tr>
        <th>Fecha de Creación</th>
        <th>Fecha de Reserva</th>
        <th>Estado de Reserva</th>
        <th>Nombre del Cliente</th>
        <th>Correo del Cliente</th>
        <th>Telefono Del Cliente</th>
        <th>Documento del Cliente</th>
        <th>Contraseña del Cliente</th>
        <th></th>
        <th>Acción</th>
      </tr>
    </thead>
    <tbody>
      <% reservas.forEach(reserva => { %>
        <tr>
          <td><%= reserva.fecha_creacion %></td>
          <td><%= reserva.fecha_reserva %></td>
          <td><%= reserva.estado_reserva %></td>
          <td><%= reserva.nombre_cliente %></td>
          <td><%= reserva.correo || reserva.email %></td>
          <td><%= reserva.telefono_cliente %></td>
          <td><%= reserva.documento_cliente %></td>
          <td><%= reserva.contraseña %></td>
          <!-- Otros campos que ingreses manualmente -->
          <td>
            <form id="eliminarReservaForm" onsubmit="eliminarReserva(event, '<%= reserva._id %>')">
              <input type="hidden" name="_method" value="DELETE">
              <button type="button" class="btn btn-danger" onclick="eliminarReserva(event, '<%= reserva._id %>')">Eliminar</button>
            </form>
          </td>
          <td>
            <button type="button" class="btn btn-warning" onclick="abrirEdicionReserva('<%= reserva._id %>')">Editar</button>
          </td>
        </tr>
      <% }); %>
    </tbody>
  </table>

  <!-- Modal para agregar reserva -->
  <div id="modalAgregarReserva" class="modal fade">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Agregar Reserva</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <!-- Formulario para agregar una nueva reserva -->
          <form id="formularioAgregarReserva" action="/agregarReserva" method="POST">
            <label for="fechaReserva" class="form-label">Fecha de Reserva:</label>
            <input type="date" id="fechaReserva" name="fechaReserva" required class="form-control">

            <label for="estadoReserva" class="form-label">Estado de Reserva:</label>
            <select id="estadoReserva" name="estadoReserva" required class="form-select">
              <option value="Agendada">Agendada</option>
              <option value="Rechazada">Rechazada</option>
              <option value="Terminada">Terminada</option>
            </select>

            <label for="nombreCliente" class="form-label">Nombre del Cliente:</label>
            <select id="nombreCliente" name="nombreCliente" onchange="obtenerConfiguracionCliente()" required class="form-select">
              <% configuraciones.forEach(configuracion => { %>
                <option value="<%= configuracion.nombre %>">
                  <%= configuracion.nombre %>
                </option>
              <% }); %>
            </select>

            <label for="telefonoCliente" class="form-label">Telefono:</label>
            <input type="text" id="telefonoCliente" name="telefonoCliente" required class="form-control">

            <!-- Otros campos que ingreses manualmente -->

            <button type="submit" class="btn btn-primary">Guardar Cambios</button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Incluye Bootstrap JS (al final del cuerpo del documento) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>

document.addEventListener("DOMContentLoaded", function () {
    // Resto de tu código JavaScript...

    // Actualiza la función abrirModal para utilizar Bootstrap
    function abrirModal() {
      const modal = new bootstrap.Modal(document.getElementById('modalAgregarReserva'));
      modal.show();
    }

    document.getElementById('btnAgregarReserva').addEventListener('click', abrirModal);
  });

  function obtenerConfiguracionCliente() {
    var selectedIndex = document.getElementById('nombreCliente').selectedIndex;
    var configuracionCliente = configuraciones[selectedIndex] || {};
    document.getElementById('correoCliente').value = configuracionCliente.correo || '';
    document.getElementById('contrasenaCliente').value = configuracionCliente.contrasena || '';
    document.getElementById('documentoCliente').value = configuracionCliente.documento || '';
  }

  async function eliminarReserva(event, reservaId) {
    event.preventDefault();
    const confirmacion = await Swal.fire({
        title: '¿Estás seguro de eliminar esta reserva?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Sí, eliminar'
      });    

      if (confirmacion.isConfirmed) {
      const options = {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
      };

      try {
        const response = await fetch(`/eliminarReserva/${reservaId}`, options);
        if (response.ok) {
          // Eliminar la fila del DOM
          const rowToRemove = document.querySelector(`tr[data-id="${reservaId}"]`);
          rowToRemove.remove();

          // Eliminar la reserva del arreglo
          const reservaIndex = reservas.findIndex(reserva => reserva._id === reservaId);
          if (reservaIndex !== -1) {
            reservas.splice(reservaIndex, 1);
          }

          // Mostrar mensaje de éxito con SweetAlert2
            Swal.fire({
              title: 'Eliminado',
              text: 'La reserva ha sido eliminada correctamente.',
              icon: 'success'
            }).then(() => {
              window.location.href = window.location.href;
            });
        } else {
          console.error('Error al eliminar la reserva');
        }
      } catch (error) {
        console.error('Error de red:', error);
      }
    }
  }

  function abrirEdicionReserva(reservaId) {
    // Redireccionar a la página de edición de la reserva
    window.location.href = `/editarReserva/${reservaId}`;
  }

  function filtrarReservasPorEstado() {
    const inputEstado = document.getElementById('buscarEstado').value.toLowerCase();
    const tablaReservas = document.getElementById('tablaReservas');
    const filas = tablaReservas.getElementsByTagName('tr');

    for (let i = 1; i < filas.length; i++) {
      const celdaEstado = filas[i].getElementsByTagName('td')[2]; // Índice 2 corresponde a la columna del estado
      const estado = celdaEstado.textContent.toLowerCase();

      if (estado.includes(inputEstado)) {
        filas[i].style.display = '';
      } else {
        filas[i].style.display = 'none';
      }
    }
  }


  function validarFechaReserva() {
    var fechaReservaInput = document.getElementById('fechaReserva');
    var fechaReserva = new Date(fechaReservaInput.value);
    var fechaActual = new Date();

    if (fechaReserva <= fechaActual) {
          Swal.fire({
          title: 'Error',
          text: 'La fecha de reserva debe ser mayor a la fecha actual.',
          icon: 'error'
        });    
      return false;
    }else{

      Swal.fire({
        title: 'Agregada',
        text: 'La reserva ha sido Agregada correctamente.',
        icon: 'success'
        });
      return true;
    }
  }

  // Agrega el evento onsubmit al formulario
  document.getElementById('formularioAgregarReserva').onsubmit = function () {
    return validarFechaReserva();
  };

  document.addEventListener("DOMContentLoaded", function () {
    // Obtener el elemento del campo de teléfono
    const telefonoInput = document.getElementById("telefonoCliente");

    // Escuchar el evento de entrada en el campo de teléfono
    telefonoInput.addEventListener("input", function (event) {
      // Obtener el valor actual del campo de teléfono
      let valorTelefono = event.target.value;

      // Eliminar cualquier carácter que no sea un número
      valorTelefono = valorTelefono.replace(/\D/g, "");

      // Actualizar el valor del campo de teléfono
      event.target.value = valorTelefono;
    });
  });

</script>
