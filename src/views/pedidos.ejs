<!-- src/views/pedidos.ejs -->
<!-- Agrega estas líneas en la sección head de tu HTML para incluir Bootstrap -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
  integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

<!-- src/views/pedidos.ejs -->
<link rel="shortcut icon"
  href="https://ajeetchaulagain.com/static/7cb4af597964b0911fe71cb2f8148d64/87351/express-js.png" type="image/x-icon" />

<%- include('./layouts/nav') %>
  <div class="container mt-4">
    <h1>Lista de usuarios</h1>
    <ul class="list-group">
      <% usuarios.forEach(usuario=> { %>
        <li class="list-group-item">
          <%= usuario.nombre %>
        </li>
        <% }); %>
    </ul>

    <div id="agregarPedidoModal" class="modal" style="display: none;">
      <div class="modal-content">
        <span id="cerrarModal" class="cerrar">&times;</span>
        <h2>Agregar Pedido</h2>
        <!-- Tu formulario para agregar pedidos aquí -->
        <form id="formularioAgregarPedido" action="/agregarPedido" method="POST" class="mt-3">
          <div class="form-group">
            <label for="fechaPedido">Fecha pedido:</label>
            <input type="date" id="fechaPedido" name="fechaPedido" min="<%= fechaActual %>" required class="form-control">
          </div>

          <!-- Botones para agregar servicios y productos -->
          <button type="button" id="agregarServicioBtn">Agregar Servicio</button>
          <button type="button" id="agregarProductoBtn">Agregar Producto</button>

          <!-- Campos para agregar servicios -->
          <div id="serviciosContainer" class="mt-3">
            <h3>Servicios</h3>
            <div class="servicio">
              <label for="tipoServicio">Tipo de Servicio:</label>
              <select id="tipoServicio" name="tipoServicio" required class="form-control">
                <option value="confeccion">Confeccion</option>
                <option value="arreglo">Arreglo Prendas</option>
                <option value="manualidades">Manualidades</option>
              </select>

              <label for="estadoTipoServicio">Estado Tipo de Servicio:</label>
              <select id="estadoTipoServicio" name="estadoTipoServicio" required class="form-control">
                <option value="activo">Activo</option>
                <option value="inactivo">Inactivo</option>
              </select>

              <label for="nombreServicio">Nombre Servicio:</label>
              <input type="text" id="nombreServicio" name="nombreServicio" required class="form-control">

              <label for="estadoServicio">Estado Servicio:</label>
              <select id="estadoServicio" name="estadoServicio" required class="form-control">
                <option value="activo">Activo</option>
                <option value="inactivo">Inactivo</option>
              </select>

              <label for="cantidadServicio">Cantidadad Servicio:</label>
              <input type="number" id="cantidadServicio" name="cantidadServicio" required class="form-control">

              <label for="precioServicio">Precio Servicio:</label>
              <input type="number" id="precioServicio" name="precioServicio" required class="form-control">
            </div>
            <input type="hidden" name="servicios" id="serviciosInput" />
          </div>

          <!-- Campos para agregar productos -->
          <div id="productosContainer" class="mt-3">
            <h3>Productos</h3>
            <div class="producto mt-3">
              <label for="tipoProducto">Tipo de Producto:</label>
              <select id="tipoProducto" name="tipoProducto" required class="form-control">
                <option value="accesorios">Accesorios</option>
                <option value="prendas de vestir">Prendas de Vestir</option>
                <option value="manualidades">Manualidades</option>
              </select>
            
              <label for="estadoTipoProducto">Estado Tipo de Producto:</label>
              <select id="estadoTipoProducto" name="estadoTipoProducto" required class="form-control">
                <option value="activo">Activo</option>
                <option value="inactivo">Inactivo</option>
              </select>
            
              <label for="nombreProducto">Nombre Producto:</label>
              <input type="text" id="nombreProducto" name="nombreProducto" required class="form-control">
            
              <label for="estadoProducto">Estado Producto:</label>
              <select id="estadoProducto" name="estadoProducto" required class="form-control">
                <option value="activo">Activo</option>
                <option value="inactivo">Inactivo</option>
              </select>
            
              <label for="cantidadProducto">Cantidad Producto:</label>
              <input type="number" id="cantidadProducto" name="cantidadProducto" required class="form-control">
            
              <label for="precioProducto">Precio Producto:</label>
              <input type="number" id="precioProducto" name="precioProducto" required class="form-control">
            </div>
            
            <input type="hidden" name="productos" id="productosInput" />
          </div>
          <input type="hidden" name="productos" id="productosInput" />
      </div>

      <div class="form-group">
        <label for="nombreUsuario">Nombre Usuario:</label>
        <select id="nombreUsuario" name="nombreUsuario" required class="form-control">
          <% usuarios.forEach(usuario=> { %>
            <option value="<%= usuario.nombre %>">
              <%= usuario.nombre %>
            </option>
            <% }); %>
        </select>
      </div>

      <input type="hidden" name="totalPedido" id="totalPedidoInput" />

      <div class="form-row">
        <div class="form-group col-md-6">
          <button type="submit" class="btn btn-primary">Guardar Pedido</button>
        </div>
        <div class="form-group col-md-6">
          <button type="button" id="cancelarPedidoBtn" class="btn btn-secondary">Cancelar</button>
        </div>
      </div>
      </form>
    </div>
  </div>
  <h1>Listado de Pedidos</h1>
  <input type="text" id="buscarPedidos" placeholder="Buscar pedidos..." oninput="filtrarPedidos()">
  <button id="agregarPedidoBtn">Agregar</button>

  <a target="_blank" href="/generarPDFPedidos">Generar PDF</a>
  <!-- <button onclick="generarPDF()">Generar PDF</button> -->

  <script>
    function generarPDF() {
      window.location.href = '/generarPDFPedidos';
    }
  </script>

  <!-- Modal -->

  <table>
    <thead>
      <tr>
        <td>Fecha Creacion</td>
        <td>Fecha Pedido</td>
        <td>Total</td>
        <td>Estado</td>
        <td>Usuario</td>
        <td>Acción</td>
      </tr>
    </thead>
    <tbody>
      <% pedidos.forEach(pedido=> { %>
        <tr>
          <td>
            <%= pedido.fecha_creacion %>
          </td>
          <td>
            <%= pedido.fecha_pedido %>
          </td>
          <td>
            <%= pedido.total_pedido %>
          </td>
          <td>
            <%= pedido.estado_pedido %>
          </td>
          <td>
            <%= pedido.nombre_usuario %>
          </td>
          <td><a href="/pedido/<%= pedido._id %>">Ver Detalle</a>&nbsp;<a
              href="/eliminarPedido/<%= pedido._id %>">Eliminar</a></td>
        </tr>
        <% }); %>
    </tbody>
  </table>
  <script>
    function filtrarPedidos() {
      // Obtener el valor del input de búsqueda
      var input = document.getElementById("buscarPedidos");
      var filtro = input.value.toUpperCase();

      // Obtener todas las filas del cuerpo de la tabla
      var filas = document.querySelector("tbody").getElementsByTagName("tr");

      // Recorrer las filas y mostrar u ocultar aquellas que coincidan con el filtro
      for (var i = 0; i < filas.length; i++) {
        var celdas = filas[i].getElementsByTagName("td");
        var mostrarFila = false;

        for (var j = 0; j < celdas.length; j++) {
          if (celdas[j]) {
            var textoCelda = celdas[j].innerText || celdas[j].textContent;
            if (textoCelda.toUpperCase().indexOf(filtro) > -1) {
              mostrarFila = true;
              break;
            }
          }
        }

        // Mostrar u ocultar la fila según el resultado de la búsqueda
        filas[i].style.display = mostrarFila ? "" : "none";
      }
    }

    // JavaScript para mostrar/ocultar el modal y validar fechas
    const agregarPedidoBtn = document.getElementById('agregarPedidoBtn');
    const agregarPedidoModal = document.getElementById('agregarPedidoModal');
    const cerrarModal = document.getElementById('cerrarModal');

    agregarPedidoBtn.addEventListener('click', () => {
      agregarPedidoModal.style.display = 'block';
    });

    cerrarModal.addEventListener('click', () => {
      agregarPedidoModal.style.display = 'none';
    });

    const agregarServicioBtn = document.getElementById('agregarServicioBtn');
    const agregarProductoBtn = document.getElementById('agregarProductoBtn');
    const serviciosContainer = document.getElementById('serviciosContainer');
    const productosContainer = document.getElementById('productosContainer');

    agregarServicioBtn.addEventListener('click', agregarCampoServicio);
    agregarProductoBtn.addEventListener('click', agregarCampoProducto);

    function agregarCampoServicio() {
      const nuevoServicio = document.querySelector('.servicio').cloneNode(true);
      serviciosContainer.appendChild(nuevoServicio);
    }

    function agregarCampoProducto() {
      const nuevoProducto = document.querySelector('.producto').cloneNode(true);
      productosContainer.appendChild(nuevoProducto);
    }

    const fechaPedidoInput = document.getElementById('fechaPedido');
    const formularioAgregarPedido = document.getElementById('formularioAgregarPedido');

    // Función para obtener datos de un servicio desde su contenedor HTML
    function obtenerDatosServicio(servicio) {
      return {
        tipoServicio: servicio.querySelector('#tipoServicio').value,
        estadoTipoServicio: servicio.querySelector('#estadoTipoServicio').value,
        nombreServicio: servicio.querySelector('#nombreServicio').value,
        estadoServicio: servicio.querySelector('#estadoServicio').value,
        cantidadServicio: parseFloat(servicio.querySelector('#cantidadServicio').value), // Parsear como número
        precioServicio: parseFloat(servicio.querySelector('#precioServicio').value), // Parsear como número
      };
    }

    // Función para obtener datos de un producto desde su contenedor HTML
    function obtenerDatosProducto(producto) {
      return {
        tipoProducto: producto.querySelector('#tipoProducto').value,
        estadoTipoProducto: producto.querySelector('#estadoTipoProducto').value,
        nombreProducto: producto.querySelector('#nombreProducto').value,
        estadoProducto: producto.querySelector('#estadoProducto').value,
        cantidadProducto: parseFloat(producto.querySelector('#cantidadProducto').value), // Parsear como número
        precioProducto: parseFloat(producto.querySelector('#precioProducto').value), // Parsear como número
      };
    }

    formularioAgregarPedido.addEventListener('submit', function (event) {
      const fechaCreacion = new Date(); // Obtener la fecha actual
      const fechaPedido = new Date(fechaPedidoInput.value);

      // Validar que la fecha de pedido sea al menos 5 días después de la fecha de creación
      if (fechaPedido - fechaCreacion < 5 * 24 * 60 * 60 * 1000) {
        alert('La fecha de pedido debe ser al menos 5 días después de la fecha de creación.');
        event.preventDefault(); // Evitar el envío del formulario si no pasa la validación
      }

      // Obtener servicios y productos del contenedor y actualizar los campos ocultos
      const servicios = Array.from(serviciosContainer.querySelectorAll('.servicio'));
      const productos = Array.from(productosContainer.querySelectorAll('.producto'));

      const serviciosData = servicios.map(obtenerDatosServicio);
      const productosData = productos.map(obtenerDatosProducto);

      // Calcular subtotales y total
      let totalPedido = 0;

      const serviciosConSubtotales = serviciosData.map(servicio => {
        const subtotal = servicio.cantidadServicio * servicio.precioServicio;
        totalPedido += subtotal;
        return { ...servicio, subtotal };
      });

      const productosConSubtotales = productosData.map(producto => {
        const subtotal = producto.cantidadProducto * producto.precioProducto;
        totalPedido += subtotal;
        return { ...producto, subtotal };
      });

      document.getElementById('serviciosInput').value = JSON.stringify(serviciosConSubtotales);
      document.getElementById('productosInput').value = JSON.stringify(productosConSubtotales);
      document.getElementById('totalPedidoInput').value = totalPedido;

    });
    const cancelarPedidoBtn = document.getElementById('cancelarPedidoBtn');

    cancelarPedidoBtn.addEventListener('click', () => {
      agregarPedidoModal.style.display = 'none';
    });
  </script>
  </div>

  <!-- Agrega estas líneas al final del body para incluir los scripts de Bootstrap -->
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
    integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
    integrity="sha384-UoNB5njRP6Ij4tNCP6/ZUgzYU2BEQJ1VPPLvekEWN4w6JlIwz8NJ3u/hWifUReY4"
    crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
    integrity="sha384-JyYMD6ivDJhJ6Iv6axfMT5TPWDjUfti4ftIu9ih1Tv0cIG2Sk8w5EUIPQIBaaF5i"
    crossorigin="anonymous"></script>